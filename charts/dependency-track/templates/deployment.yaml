apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dependency-track.fullname" . }}
  labels:
{{ include "dependency-track.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "dependency-track.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "dependency-track.name" . }}
        release: {{ .Release.Name }}
    spec:
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "dependency-track.name" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
          - name: data
            mountPath: /data
          livenessProbe:
            httpGet:
              port: 8080
              path: /
            initialDelaySeconds: 45
          readinessProbe:
            httpGet:
              port: 8080
              path: /
            initialDelaySeconds: 45
          resources:
{{ toYaml .Values.resources | indent 12 }}
          env:
            {{- /* Environment variables from secrets list */}}
            {{- range .Values.secretsEnv }}
            {{- $secretName := .secretName }}
            {{- range $key, $value :=  .env }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: {{ $value }}
            {{- end }}
            {{- end }}
            {{- range $key, $value :=  .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
